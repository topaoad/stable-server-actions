// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Todo {
  id  Int @id @default(autoincrement())
  name  String
  isCompleted Boolean @default(false)
}

generator zod {
  provider = "npx zod-prisma-types"
  output   = "./generated/zod" // 生成されたファイルの出力先ディレクトリ
  useMultipleFiles = true                  // 各モデルに対して別々のファイルを生成する
  writeBarrelFiles = false                 // index.ts（バレルファイル）を生成しない
  createInputTypes = false                 // Prismaの入力型（Create, Update等）に対応するZodスキーマを生成しない
  // createModelTypes = true                // Prismaモデルに基づいてZodスキーマ型を生成する（デフォルト：true）
  // addInputTypeValidation = true          // 入力型にバリデーションを追加する（デフォルト：true）
  // addIncludeType = true                  // includeオプション用の型を生成する（デフォルト：true）
  // addSelectType = true                   // selectオプション用の型を生成する（デフォルト：true）
  // validateWhereUniqueInput = true        // WhereUniqueInput型にバリデーションを追加する（デフォルト：true）
  createOptionalDefaultValuesTypes = true  // デフォルト値を持つフィールドをオプショナルにした型を生成する
  createRelationValuesTypes = true         // リレーションの値に対する型を生成する
  createPartialTypes = true                // 部分的な型を生成する
  // useDefaultValidators = true            // Prismaスキーマに基づいたデフォルトのバリデーターを使用する（デフォルト：true）
  // coerceDate = true                      // 日付文字列をDateオブジェクトに自動変換する（デフォルト：true）
  writeNullishInModelTypes = true          // モデル型でnullish（nullまたはundefined）を明示的に書き込む
  // prismaClientPath = "./path/to/prisma/client" // Prisma Clientのパスを指定（デフォルト：クライアント出力パス）
}
